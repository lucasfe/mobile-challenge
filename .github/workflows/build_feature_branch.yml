name: Build Feature Branch

on:
  push:
    branches: 'feature/**'

jobs:
  test_job:
    name: Test
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Debug Tests
        run: ./gradlew testDebugUnitTest --continue

      - name: Upload Test Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: '**/build/reports/tests/'

  lint_job:
    name: Lint
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Debug Lint
        run: ./gradlew lintDebug

      - name: Upload Lint Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: lint-report
          path: '**/build/reports/lint-results-*'

  notification_job:
    needs: [test_job, lint_job, assemble_distribute_job]
    name: Notify Build Status
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: commit,ref,workflow,eventName
          author_name: ${{ github.actor }}
          icon_emoji: ':robot_face:'
          username: "Feature Branch Build Status"
          text: |
            ${{ env.WORKFLOW_CONCLUSION }}:
            https://github.com/mobile-challenge/qrcode/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required